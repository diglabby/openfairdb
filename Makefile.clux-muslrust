PROJECT_NAME=openfairdb
EXECUTABLE_NAME=openfairdb

TARGET_ARCH=x86_64
TARGET_VENDOR=unknown
TARGET_OS=linux
TARGET_ENV=musl

BUILD_TARGET=$(TARGET_ARCH)-$(TARGET_VENDOR)-$(TARGET_OS)-$(TARGET_ENV)

RUST_TOOLCHAIN=$(file < rust-toolchain)

BUILD_IMAGE=clux/muslrust:$(RUST_TOOLCHAIN)
BUILD_ROOT=/tmp/muslrust/$(RUST_TOOLCHAIN)

CARGO_CACHE=$(BUILD_ROOT)/cargo-cache
CARGO_GIT=$(CARGO_CACHE)/git
CARGO_REGISTRY=$(CARGO_CACHE)/registry

PROJECT_ROOT=$(BUILD_ROOT)/$(PROJECT_NAME)

.PHONY: default
default: build

# Pull the build image from DockerHub (initially or update)
pull:
	docker pull docker.io/$(BUILD_IMAGE)

build:
	mkdir -p "$(CARGO_GIT)"
	mkdir -p "$(CARGO_REGISTRY)"
	mkdir -p "$(PROJECT_ROOT)"
	# rust-toolchain: Implicitly defined by the Docker image and cannot be changed!
	rsync -av --delete --chown `id -gn`:`id -un` --progress . "$(PROJECT_ROOT)" --exclude target --exclude rust-toolchain --exclude .git
	docker run --rm \
		-v "$(CARGO_GIT)":/root/.cargo/git:Z \
		-v "$(CARGO_REGISTRY)":/root/.cargo/registry:Z \
		-v "$(PROJECT_ROOT)":/volume:Z \
		-w /volume \
		-it $(BUILD_IMAGE) \
		cargo build --bin=$(EXECUTABLE_NAME) --release
	strip $(PROJECT_ROOT)/target/$(BUILD_TARGET)/release/$(EXECUTABLE_NAME)
	mkdir -p bin/$(BUILD_TARGET)
	cp "$(PROJECT_ROOT)/target/$(BUILD_TARGET)/release/$(EXECUTABLE_NAME)" bin/$(BUILD_TARGET)
